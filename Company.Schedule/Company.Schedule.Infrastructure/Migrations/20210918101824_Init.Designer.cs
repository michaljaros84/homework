// <auto-generated />
using System;
using Company.Schedule.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Company.Schedule.Infrastructure.Migrations
{
    [DbContext(typeof(CompanyScheduleContext))]
    [Migration("20210918101824_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Company.Schedule.Domain.Entities.CompanyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyType")
                        .HasColumnType("int");

                    b.Property<long?>("MarketId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Company.Schedule.Domain.Entities.Market", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Large")
                        .HasColumnType("bit");

                    b.Property<bool>("Medium")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Small")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Markets");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Large = true,
                            Medium = true,
                            Name = "Denmark",
                            Small = true
                        },
                        new
                        {
                            Id = 2L,
                            Large = true,
                            Medium = true,
                            Name = "Norway",
                            Small = true
                        },
                        new
                        {
                            Id = 3L,
                            Large = false,
                            Medium = true,
                            Name = "Sweden",
                            Small = true
                        },
                        new
                        {
                            Id = 4L,
                            Large = true,
                            Medium = false,
                            Name = "Finland",
                            Small = false
                        });
                });

            modelBuilder.Entity("Company.Schedule.Domain.Entities.MarketDay", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DaysOffset")
                        .HasColumnType("int");

                    b.Property<long>("MarketId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.ToTable("MarketDays");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DaysOffset = 1,
                            MarketId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            DaysOffset = 5,
                            MarketId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            DaysOffset = 10,
                            MarketId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            DaysOffset = 15,
                            MarketId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            DaysOffset = 20,
                            MarketId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            DaysOffset = 1,
                            MarketId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            DaysOffset = 5,
                            MarketId = 2L
                        },
                        new
                        {
                            Id = 8L,
                            DaysOffset = 10,
                            MarketId = 2L
                        },
                        new
                        {
                            Id = 9L,
                            DaysOffset = 20,
                            MarketId = 2L
                        },
                        new
                        {
                            Id = 10L,
                            DaysOffset = 1,
                            MarketId = 3L
                        },
                        new
                        {
                            Id = 11L,
                            DaysOffset = 7,
                            MarketId = 3L
                        },
                        new
                        {
                            Id = 12L,
                            DaysOffset = 14,
                            MarketId = 3L
                        },
                        new
                        {
                            Id = 13L,
                            DaysOffset = 28,
                            MarketId = 3L
                        },
                        new
                        {
                            Id = 14L,
                            DaysOffset = 1,
                            MarketId = 4L
                        },
                        new
                        {
                            Id = 15L,
                            DaysOffset = 5,
                            MarketId = 4L
                        },
                        new
                        {
                            Id = 16L,
                            DaysOffset = 10,
                            MarketId = 4L
                        },
                        new
                        {
                            Id = 17L,
                            DaysOffset = 15,
                            MarketId = 4L
                        },
                        new
                        {
                            Id = 18L,
                            DaysOffset = 20,
                            MarketId = 4L
                        });
                });

            modelBuilder.Entity("Company.Schedule.Domain.Entities.ScheduledDate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CompanyEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyEntityId");

                    b.ToTable("ScheduledDates");
                });

            modelBuilder.Entity("Company.Schedule.Domain.Entities.CompanyEntity", b =>
                {
                    b.HasOne("Company.Schedule.Domain.Entities.Market", "Market")
                        .WithMany()
                        .HasForeignKey("MarketId");

                    b.Navigation("Market");
                });

            modelBuilder.Entity("Company.Schedule.Domain.Entities.MarketDay", b =>
                {
                    b.HasOne("Company.Schedule.Domain.Entities.Market", null)
                        .WithMany("MarketDays")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Schedule.Domain.Entities.ScheduledDate", b =>
                {
                    b.HasOne("Company.Schedule.Domain.Entities.CompanyEntity", null)
                        .WithMany("Schedule")
                        .HasForeignKey("CompanyEntityId");
                });

            modelBuilder.Entity("Company.Schedule.Domain.Entities.CompanyEntity", b =>
                {
                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Company.Schedule.Domain.Entities.Market", b =>
                {
                    b.Navigation("MarketDays");
                });
#pragma warning restore 612, 618
        }
    }
}
